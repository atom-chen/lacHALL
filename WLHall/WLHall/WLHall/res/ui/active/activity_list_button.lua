--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create panel_frame
local panel_frame = ccui.Layout:create()
panel_frame:ignoreContentAdaptWithSize(false)
panel_frame:setClippingEnabled(false)
panel_frame:setBackGroundImageCapInsets({x = -104, y = -30, width = 208, height = 60})
panel_frame:setBackGroundImageScale9Enabled(true)
panel_frame:setTouchEnabled(true);
panel_frame:setLayoutComponentEnabled(true)
panel_frame:setName("panel_frame")
panel_frame:setTag(31)
panel_frame:setCascadeColorEnabled(true)
panel_frame:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(panel_frame)
layout:setSize({width = 274.0000, height = 92.0000})
layout:setRightMargin(-274.0000)
layout:setTopMargin(-92.0000)
Node:addChild(panel_frame)

--Create image_bg
local image_bg = ccui.ImageView:create()
image_bg:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/common.plist")
image_bg:loadTexture("hall/common/new_pop_select_bg.png",1)
image_bg:setLayoutComponentEnabled(true)
image_bg:setName("image_bg")
image_bg:setTag(74)
image_bg:setCascadeColorEnabled(true)
image_bg:setCascadeOpacityEnabled(true)
image_bg:setAnchorPoint(0.0000, 0.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(image_bg)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 274.0000, height = 92.0000})
panel_frame:addChild(image_bg)

--Create Image_ico
local Image_ico = ccui.ImageView:create()
Image_ico:ignoreContentAdaptWithSize(false)
Image_ico:loadTexture("Default/ImageFile.png",0)
Image_ico:setLayoutComponentEnabled(true)
Image_ico:setName("Image_ico")
Image_ico:setTag(30)
Image_ico:setCascadeColorEnabled(true)
Image_ico:setCascadeOpacityEnabled(true)
Image_ico:setPosition(42.0000, 48.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(Image_ico)
layout:setPositionPercentX(0.1533)
layout:setPositionPercentY(0.5217)
layout:setPercentWidth(0.1679)
layout:setPercentHeight(0.5000)
layout:setSize({width = 46.0000, height = 46.0000})
layout:setLeftMargin(19.0000)
layout:setRightMargin(209.0000)
layout:setTopMargin(21.0000)
layout:setBottomMargin(25.0000)
panel_frame:addChild(Image_ico)

--Create text_title
local text_title = ccui.Text:create()
text_title:ignoreContentAdaptWithSize(true)
text_title:setTextAreaSize({width = 0, height = 0})
text_title:setFontName("")
text_title:setFontSize(28)
text_title:setString([[]])
text_title:setTextHorizontalAlignment(1)
text_title:setTextVerticalAlignment(1)
text_title:setLayoutComponentEnabled(true)
text_title:setName("text_title")
text_title:setTag(32)
text_title:setCascadeColorEnabled(true)
text_title:setCascadeOpacityEnabled(true)
text_title:setAnchorPoint(0.0000, 0.5000)
text_title:setPosition(80.0000, 48.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(text_title)
layout:setPositionPercentX(0.2920)
layout:setPositionPercentY(0.5217)
layout:setLeftMargin(80.0000)
layout:setRightMargin(194.0000)
layout:setTopMargin(44.0000)
layout:setBottomMargin(48.0000)
panel_frame:addChild(text_title)

--Create read_point
local read_point = ccui.ImageView:create()
read_point:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/common.plist")
read_point:loadTexture("hall/common/new_unread_pt.png",1)
read_point:setLayoutComponentEnabled(true)
read_point:setName("read_point")
read_point:setTag(33)
read_point:setCascadeColorEnabled(true)
read_point:setCascadeOpacityEnabled(true)
read_point:setPosition(250.0000, 66.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(read_point)
layout:setPositionPercentX(0.9124)
layout:setPositionPercentY(0.7174)
layout:setPercentWidth(0.0730)
layout:setPercentHeight(0.2283)
layout:setSize({width = 20.0000, height = 21.0000})
layout:setLeftMargin(240.0000)
layout:setRightMargin(14.0000)
layout:setTopMargin(15.5000)
layout:setBottomMargin(55.5000)
panel_frame:addChild(read_point)

--Create Image_line
local Image_line = ccui.ImageView:create()
Image_line:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/common.plist")
Image_line:loadTexture("hall/common/new_virtual_line.png",1)
Image_line:setScale9Enabled(true)
Image_line:setCapInsets({x = 92, y = 0, width = 88, height = 2})
Image_line:setLayoutComponentEnabled(true)
Image_line:setName("Image_line")
Image_line:setTag(77)
Image_line:setCascadeColorEnabled(true)
Image_line:setCascadeOpacityEnabled(true)
Image_line:setAnchorPoint(0.0000, 0.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(Image_line)
layout:setPercentWidthEnabled(true)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(0.0217)
layout:setSize({width = 274.0000, height = 2.0000})
layout:setTopMargin(90.0000)
panel_frame:addChild(Image_line)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

