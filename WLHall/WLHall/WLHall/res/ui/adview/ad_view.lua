--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create panel_bg
local panel_bg = ccui.Layout:create()
panel_bg:ignoreContentAdaptWithSize(false)
panel_bg:setClippingEnabled(false)
panel_bg:setBackGroundColorOpacity(102)
panel_bg:setTouchEnabled(true);
panel_bg:setLayoutComponentEnabled(true)
panel_bg:setName("panel_bg")
panel_bg:setTag(100)
panel_bg:setCascadeColorEnabled(true)
panel_bg:setCascadeOpacityEnabled(true)
panel_bg:setAnchorPoint(0.5000, 0.5000)
layout = ccui.LayoutComponent:bindLayoutComponent(panel_bg)
layout:setSize({width = 1280.0000, height = 720.0000})
layout:setLeftMargin(-640.0000)
layout:setRightMargin(-640.0000)
layout:setTopMargin(-360.0000)
layout:setBottomMargin(-360.0000)
Node:addChild(panel_bg)

--Create panel_touch
local panel_touch = ccui.Layout:create()
panel_touch:ignoreContentAdaptWithSize(false)
panel_touch:setClippingEnabled(false)
panel_touch:setBackGroundColorOpacity(102)
panel_touch:setTouchEnabled(true);
panel_touch:setLayoutComponentEnabled(true)
panel_touch:setName("panel_touch")
panel_touch:setTag(6)
panel_touch:setCascadeColorEnabled(true)
panel_touch:setCascadeOpacityEnabled(true)
panel_touch:setAnchorPoint(0.5000, 0.5000)
panel_touch:setPosition(640.0000, 360.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(panel_touch)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(0.7250)
layout:setPercentHeight(0.6278)
layout:setSize({width = 928.0000, height = 452.0000})
layout:setLeftMargin(176.0000)
layout:setRightMargin(176.0000)
layout:setTopMargin(134.0000)
layout:setBottomMargin(134.0000)
panel_bg:addChild(panel_touch)

--Create nd_loading
local nd_loading = ccui.Layout:create()
nd_loading:ignoreContentAdaptWithSize(false)
nd_loading:setClippingEnabled(false)
nd_loading:setBackGroundColorType(1)
nd_loading:setBackGroundColor({r = 255, g = 255, b = 255})
nd_loading:setLayoutComponentEnabled(true)
nd_loading:setName("nd_loading")
nd_loading:setTag(5)
nd_loading:setCascadeColorEnabled(true)
nd_loading:setCascadeOpacityEnabled(true)
nd_loading:setAnchorPoint(0.5000, 0.5000)
nd_loading:setPosition(640.0000, 360.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(nd_loading)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(0.7250)
layout:setPercentHeight(0.6278)
layout:setSize({width = 928.0000, height = 452.0000})
layout:setLeftMargin(176.0000)
layout:setRightMargin(176.0000)
layout:setTopMargin(134.0000)
layout:setBottomMargin(134.0000)
panel_bg:addChild(nd_loading)

--Create txt_loading
local txt_loading = ccui.Text:create()
txt_loading:ignoreContentAdaptWithSize(true)
txt_loading:setTextAreaSize({width = 0, height = 0})
txt_loading:setFontSize(30)
txt_loading:setString([[加载中...]])
txt_loading:setLayoutComponentEnabled(true)
txt_loading:setName("txt_loading")
txt_loading:setTag(103)
txt_loading:setCascadeColorEnabled(true)
txt_loading:setCascadeOpacityEnabled(true)
txt_loading:setPosition(464.0000, 226.0000)
txt_loading:setTextColor({r = 127, g = 127, b = 127})
layout = ccui.LayoutComponent:bindLayoutComponent(txt_loading)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(0.1250)
layout:setPercentHeight(0.0752)
layout:setSize({width = 116.0000, height = 34.0000})
layout:setLeftMargin(406.0000)
layout:setRightMargin(406.0000)
layout:setTopMargin(209.0000)
layout:setBottomMargin(209.0000)
nd_loading:addChild(txt_loading)

--Create panel_pages
local panel_pages = ccui.PageView:create()
panel_pages:ignoreContentAdaptWithSize(false)
panel_pages:setClippingEnabled(true)
panel_pages:setTouchEnabled(false);
panel_pages:setLayoutComponentEnabled(true)
panel_pages:setName("panel_pages")
panel_pages:setTag(102)
panel_pages:setCascadeColorEnabled(true)
panel_pages:setCascadeOpacityEnabled(true)
panel_pages:setAnchorPoint(0.5000, 0.5000)
panel_pages:setPosition(640.0000, 360.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(panel_pages)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(0.7250)
layout:setPercentHeight(0.6278)
layout:setSize({width = 928.0000, height = 452.0000})
layout:setLeftMargin(176.0000)
layout:setRightMargin(176.0000)
layout:setTopMargin(134.0000)
layout:setBottomMargin(134.0000)
panel_bg:addChild(panel_pages)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

