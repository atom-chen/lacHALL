--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to
-- get a callback function in creating scene process.
-- the returned callback function will be registered to
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create img_bg
local img_bg = ccui.ImageView:create()
img_bg:ignoreContentAdaptWithSize(false)
img_bg:loadTexture("hall/vip_detailed/btn_select.png",0)
img_bg:setScale9Enabled(true)
img_bg:setCapInsets({x = 11, y = 34, width = 4, height = 1})
img_bg:setLayoutComponentEnabled(true)
img_bg:setName("img_bg")
img_bg:setTag(38)
img_bg:setCascadeColorEnabled(true)
img_bg:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(img_bg)
layout:setSize({width = 156.0000, height = 68.0000})
layout:setLeftMargin(-78.0000)
layout:setRightMargin(-78.0000)
layout:setTopMargin(-34.0000)
layout:setBottomMargin(-34.0000)
Node:addChild(img_bg)

--Create txt_1
local txt_1 = ccui.Text:create()
txt_1:ignoreContentAdaptWithSize(true)
txt_1:setTextAreaSize({width = 0, height = 0})
txt_1:setFontSize(28)
txt_1:setString([[特权]])
txt_1:setLayoutComponentEnabled(true)
txt_1:setName("txt_1")
txt_1:setTag(39)
txt_1:setCascadeColorEnabled(true)
txt_1:setCascadeOpacityEnabled(true)
txt_1:setPosition(29.7881, 0.0000)
txt_1:setTextColor({r = 159, g = 0, b = 0})
layout = ccui.LayoutComponent:bindLayoutComponent(txt_1)
layout:setSize({width = 59.0000, height = 32.0000})
layout:setLeftMargin(0.2881)
layout:setRightMargin(-59.2881)
layout:setTopMargin(-16.0000)
layout:setBottomMargin(-16.0000)
Node:addChild(txt_1)

--Create alab_lv
local alab_lv = ccui.TextAtlas:create([[0]],
													"hall/vip_detailed/vip_num_0.png",
													46,
													24,
													"0")
alab_lv:setLayoutComponentEnabled(true)
alab_lv:setName("alab_lv")
alab_lv:setTag(40)
alab_lv:setCascadeColorEnabled(true)
alab_lv:setCascadeOpacityEnabled(true)
alab_lv:setPosition(-18.2104, 0.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(alab_lv)
layout:setSize({width = 46.0000, height = 24.0000})
layout:setLeftMargin(-41.2104)
layout:setRightMargin(-4.7896)
layout:setTopMargin(-12.0000)
layout:setBottomMargin(-12.0000)
Node:addChild(alab_lv)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()

result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

