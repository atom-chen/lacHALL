--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create item_rank
local item_rank = ccui.Layout:create()
item_rank:ignoreContentAdaptWithSize(false)
item_rank:setClippingEnabled(true)
item_rank:setBackGroundColorOpacity(102)
item_rank:setLayoutComponentEnabled(true)
item_rank:setName("item_rank")
item_rank:setTag(791)
item_rank:setCascadeColorEnabled(true)
item_rank:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(item_rank)
layout:setSize({width = 240.0000, height = 343.0000})
layout:setRightMargin(-240.0000)
layout:setTopMargin(-343.0000)
Node:addChild(item_rank)

--Create img_bg
local img_bg = ccui.ImageView:create()
img_bg:ignoreContentAdaptWithSize(false)
img_bg:loadTexture("hall/arena/bg_mrt_hold.png",0)
img_bg:setLayoutComponentEnabled(true)
img_bg:setName("img_bg")
img_bg:setTag(2131)
img_bg:setCascadeColorEnabled(true)
img_bg:setCascadeOpacityEnabled(true)
img_bg:setAnchorPoint(0.0000, 0.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(img_bg)
layout:setPercentWidth(1.0000)
layout:setPercentHeight(1.0000)
layout:setSize({width = 240.0000, height = 343.0000})
item_rank:addChild(img_bg)

--Create txt_name
local txt_name = ccui.Text:create()
txt_name:ignoreContentAdaptWithSize(true)
txt_name:setTextAreaSize({width = 0, height = 0})
txt_name:setFontSize(25)
txt_name:setString([[林志玲]])
txt_name:setTextVerticalAlignment(1)
txt_name:setLayoutComponentEnabled(true)
txt_name:setName("txt_name")
txt_name:setTag(794)
txt_name:setCascadeColorEnabled(true)
txt_name:setCascadeOpacityEnabled(true)
txt_name:setPosition(119.9999, 78.3342)
txt_name:setScaleY(0.8448)
txt_name:setTextColor({r = 153, g = 90, b = 15})
layout = ccui.LayoutComponent:bindLayoutComponent(txt_name)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.2284)
layout:setPercentWidth(0.3125)
layout:setPercentHeight(0.0729)
layout:setSize({width = 75.0000, height = 25.0000})
layout:setLeftMargin(82.4999)
layout:setRightMargin(82.5001)
layout:setTopMargin(252.1658)
layout:setBottomMargin(65.8342)
item_rank:addChild(txt_name)

--Create img_avatar
local img_avatar = ccui.ImageView:create()
img_avatar:ignoreContentAdaptWithSize(false)
img_avatar:loadTexture("Default/ImageFile.png",0)
img_avatar:setLayoutComponentEnabled(true)
img_avatar:setName("img_avatar")
img_avatar:setTag(461)
img_avatar:setCascadeColorEnabled(true)
img_avatar:setCascadeOpacityEnabled(true)
img_avatar:setPosition(120.7072, 193.6921)
layout = ccui.LayoutComponent:bindLayoutComponent(img_avatar)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5029)
layout:setPositionPercentY(0.5647)
layout:setPercentWidth(0.8250)
layout:setPercentHeight(0.5423)
layout:setSize({width = 198.0000, height = 186.0000})
layout:setLeftMargin(21.7072)
layout:setRightMargin(20.2928)
layout:setTopMargin(56.3079)
layout:setBottomMargin(100.6921)
item_rank:addChild(img_avatar)

--Create Panel_bg
local Panel_bg = ccui.Layout:create()
Panel_bg:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/arena.plist")
Panel_bg:setBackGroundImage("hall/arena/img_mingrenaward_bg.png",1)
Panel_bg:setClippingEnabled(false)
Panel_bg:setBackGroundImageCapInsets({x = 14, y = 10, width = 15, height = 14})
Panel_bg:setBackGroundColorOpacity(102)
Panel_bg:setBackGroundImageScale9Enabled(true)
Panel_bg:setTouchEnabled(true);
Panel_bg:setLayoutComponentEnabled(true)
Panel_bg:setName("Panel_bg")
Panel_bg:setTag(692)
Panel_bg:setCascadeColorEnabled(true)
Panel_bg:setCascadeOpacityEnabled(true)
Panel_bg:setPosition(20.3967, 18.2867)
layout = ccui.LayoutComponent:bindLayoutComponent(Panel_bg)
layout:setPositionPercentX(0.0850)
layout:setPositionPercentY(0.0533)
layout:setPercentWidth(0.8333)
layout:setPercentHeight(0.0991)
layout:setSize({width = 200.0000, height = 34.0000})
layout:setLeftMargin(20.3967)
layout:setRightMargin(19.6033)
layout:setTopMargin(290.7133)
layout:setBottomMargin(18.2867)
item_rank:addChild(Panel_bg)

--Create txt_score
local txt_score = ccui.Text:create()
txt_score:ignoreContentAdaptWithSize(true)
txt_score:setTextAreaSize({width = 0, height = 0})
txt_score:setFontSize(23)
txt_score:setString([[荣誉分:0]])
txt_score:setLayoutComponentEnabled(true)
txt_score:setName("txt_score")
txt_score:setTag(2132)
txt_score:setCascadeColorEnabled(true)
txt_score:setCascadeOpacityEnabled(true)
txt_score:setAnchorPoint(0.0000, 0.5000)
txt_score:setPosition(38.0000, 34.9999)
txt_score:setTextColor({r = 246, g = 230, b = 155})
layout = ccui.LayoutComponent:bindLayoutComponent(txt_score)
layout:setPositionPercentX(0.1583)
layout:setPositionPercentY(0.1020)
layout:setPercentWidth(0.3875)
layout:setPercentHeight(0.0671)
layout:setSize({width = 93.0000, height = 23.0000})
layout:setLeftMargin(38.0000)
layout:setRightMargin(109.0000)
layout:setTopMargin(296.5001)
layout:setBottomMargin(23.4999)
item_rank:addChild(txt_score)

--Create txt_phase
local txt_phase = ccui.Text:create()
txt_phase:ignoreContentAdaptWithSize(true)
txt_phase:setTextAreaSize({width = 0, height = 0})
txt_phase:setFontName("")
txt_phase:setFontSize(32)
txt_phase:setString([[第01期]])
txt_phase:setLayoutComponentEnabled(true)
txt_phase:setName("txt_phase")
txt_phase:setTag(232)
txt_phase:setCascadeColorEnabled(true)
txt_phase:setCascadeOpacityEnabled(true)
txt_phase:setPosition(120.0000, 313.6743)
txt_phase:setTextColor({r = 142, g = 107, b = 49})
layout = ccui.LayoutComponent:bindLayoutComponent(txt_phase)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.9145)
layout:setPercentWidth(0.4000)
layout:setPercentHeight(0.0962)
layout:setSize({width = 96.0000, height = 33.0000})
layout:setLeftMargin(72.0000)
layout:setRightMargin(72.0000)
layout:setTopMargin(12.8257)
layout:setBottomMargin(297.1743)
item_rank:addChild(txt_phase)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

