--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create logo_node
local logo_node=cc.Node:create()
logo_node:setName("logo_node")
logo_node:setTag(16)
logo_node:setCascadeColorEnabled(true)
logo_node:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(logo_node)
Node:addChild(logo_node)

--Create img_logo
local img_logo = ccui.ImageView:create()
img_logo:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/loading.plist")
img_logo:loadTexture("hall/loading/img_logo.png",1)
img_logo:setTouchEnabled(true);
img_logo:setLayoutComponentEnabled(true)
img_logo:setName("img_logo")
img_logo:setTag(102)
img_logo:setCascadeColorEnabled(true)
img_logo:setCascadeOpacityEnabled(true)
img_logo:setPosition(138.0000, 188.0000)
img_logo:setScaleX(0.7900)
img_logo:setScaleY(0.7900)
layout = ccui.LayoutComponent:bindLayoutComponent(img_logo)
layout:setSize({width = 266.0000, height = 62.0000})
layout:setLeftMargin(5.0000)
layout:setRightMargin(-271.0000)
layout:setTopMargin(-219.0000)
layout:setBottomMargin(157.0000)
logo_node:addChild(img_logo)

--Create text_approval2
local text_approval2 = ccui.Text:create()
text_approval2:ignoreContentAdaptWithSize(true)
text_approval2:setTextAreaSize({width = 0, height = 0})
text_approval2:setFontName("")
text_approval2:setFontSize(24)
text_approval2:setString([[文网游备字[2014]M-CBG123号]])
text_approval2:setLayoutComponentEnabled(true)
text_approval2:setName("text_approval2")
text_approval2:setTag(98)
text_approval2:setCascadeColorEnabled(true)
text_approval2:setCascadeOpacityEnabled(true)
text_approval2:setAnchorPoint(0.0000, 1.0000)
text_approval2:setPosition(35.0000, 108.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(text_approval2)
layout:setSize({width = 312.0000, height = 24.0000})
layout:setLeftMargin(35.0000)
layout:setRightMargin(-347.0000)
layout:setTopMargin(-108.0000)
layout:setBottomMargin(84.0000)
logo_node:addChild(text_approval2)

--Create text_approval1
local text_approval1 = ccui.Text:create()
text_approval1:ignoreContentAdaptWithSize(true)
text_approval1:setTextAreaSize({width = 0, height = 0})
text_approval1:setFontName("")
text_approval1:setFontSize(24)
text_approval1:setString([[新广初审[2016]999号]])
text_approval1:setLayoutComponentEnabled(true)
text_approval1:setName("text_approval1")
text_approval1:setTag(99)
text_approval1:setCascadeColorEnabled(true)
text_approval1:setCascadeOpacityEnabled(true)
text_approval1:setAnchorPoint(0.0000, 0.0000)
text_approval1:setPosition(35.0000, 116.0002)
layout = ccui.LayoutComponent:bindLayoutComponent(text_approval1)
layout:setSize({width = 228.0000, height = 24.0000})
layout:setLeftMargin(35.0000)
layout:setRightMargin(-263.0000)
layout:setTopMargin(-140.0002)
layout:setBottomMargin(116.0002)
logo_node:addChild(text_approval1)

--Create btn_contact
local btn_contact = ccui.Button:create()
btn_contact:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/loading.plist")
btn_contact:loadTextureNormal("hall/loading/btn_kf.png",1)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/loading.plist")
btn_contact:loadTexturePressed("hall/loading/btn_kf.png",1)
btn_contact:loadTextureDisabled("Default/Button_Disable.png",0)
btn_contact:setTitleFontSize(14)
btn_contact:setTitleColor({r = 65, g = 65, b = 70})
btn_contact:setScale9Enabled(true)
btn_contact:setCapInsets({x = 15, y = 11, width = 134, height = 32})
btn_contact:setLayoutComponentEnabled(true)
btn_contact:setName("btn_contact")
btn_contact:setTag(100)
btn_contact:setCascadeColorEnabled(true)
btn_contact:setCascadeOpacityEnabled(true)
btn_contact:setPosition(1159.0000, 193.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(btn_contact)
layout:setSize({width = 164.0000, height = 54.0000})
layout:setLeftMargin(1077.0000)
layout:setRightMargin(-1241.0000)
layout:setTopMargin(-220.0000)
layout:setBottomMargin(166.0000)
Node:addChild(btn_contact)

--Create btn_repair
local btn_repair = ccui.Button:create()
btn_repair:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/loading.plist")
btn_repair:loadTextureNormal("hall/loading/btn_xf.png",1)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/loading.plist")
btn_repair:loadTexturePressed("hall/loading/btn_xf.png",1)
btn_repair:loadTextureDisabled("Default/Button_Disable.png",0)
btn_repair:setTitleFontSize(14)
btn_repair:setTitleColor({r = 65, g = 65, b = 70})
btn_repair:setScale9Enabled(true)
btn_repair:setCapInsets({x = 15, y = 11, width = 84, height = 32})
btn_repair:setLayoutComponentEnabled(true)
btn_repair:setName("btn_repair")
btn_repair:setTag(101)
btn_repair:setCascadeColorEnabled(true)
btn_repair:setCascadeOpacityEnabled(true)
btn_repair:setPosition(995.0000, 193.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(btn_repair)
layout:setSize({width = 114.0000, height = 54.0000})
layout:setLeftMargin(938.0000)
layout:setRightMargin(-1052.0000)
layout:setTopMargin(-220.0000)
layout:setBottomMargin(166.0000)
Node:addChild(btn_repair)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

