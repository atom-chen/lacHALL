--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create panel_1
local panel_1 = ccui.Layout:create()
panel_1:ignoreContentAdaptWithSize(false)
panel_1:setClippingEnabled(false)
panel_1:setBackGroundColorOpacity(102)
panel_1:setTouchEnabled(true);
panel_1:setLayoutComponentEnabled(true)
panel_1:setName("panel_1")
panel_1:setTag(1332)
panel_1:setCascadeColorEnabled(true)
panel_1:setCascadeOpacityEnabled(true)
panel_1:setAnchorPoint(0.5000, 0.5000)
panel_1:setPosition(171.0000, 195.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(panel_1)
layout:setSize({width = 342.0000, height = 390.0000})
layout:setRightMargin(-342.0000)
layout:setTopMargin(-390.0000)
Node:addChild(panel_1)

--Create img_di
local img_di = ccui.ImageView:create()
img_di:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/newhonor.plist")
img_di:loadTexture("hall/newhonor/img_di2.png",1)
img_di:setLayoutComponentEnabled(true)
img_di:setName("img_di")
img_di:setTag(1337)
img_di:setCascadeColorEnabled(true)
img_di:setCascadeOpacityEnabled(true)
img_di:setPosition(171.0000, 172.2810)
layout = ccui.LayoutComponent:bindLayoutComponent(img_di)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.4417)
layout:setPercentWidth(1.0058)
layout:setPercentHeight(0.5744)
layout:setSize({width = 344.0000, height = 224.0000})
layout:setLeftMargin(-1.0000)
layout:setRightMargin(-1.0000)
layout:setTopMargin(105.7190)
layout:setBottomMargin(60.2810)
panel_1:addChild(img_di)

--Create img_cup
local img_cup = ccui.ImageView:create()
img_cup:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/cup.plist")
img_cup:loadTexture("hall/honor/grade_img_2.png",1)
img_cup:setLayoutComponentEnabled(true)
img_cup:setName("img_cup")
img_cup:setTag(1336)
img_cup:setCascadeColorEnabled(true)
img_cup:setCascadeOpacityEnabled(true)
img_cup:setAnchorPoint(0.5000, 0.0000)
img_cup:setPosition(171.0000, 96.2602)
img_cup:setScaleX(1.1000)
img_cup:setScaleY(1.1000)
layout = ccui.LayoutComponent:bindLayoutComponent(img_cup)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.2468)
layout:setPercentWidth(0.5702)
layout:setPercentHeight(0.4462)
layout:setSize({width = 195.0000, height = 174.0000})
layout:setLeftMargin(73.5000)
layout:setRightMargin(73.5000)
layout:setTopMargin(119.7398)
layout:setBottomMargin(96.2602)
panel_1:addChild(img_cup)

--Create txt_grade
local txt_grade = ccui.Text:create()
txt_grade:ignoreContentAdaptWithSize(true)
txt_grade:setTextAreaSize({width = 0, height = 0})
txt_grade:setFontSize(24)
txt_grade:setString([[新手(0 - 3000)]])
txt_grade:setLayoutComponentEnabled(true)
txt_grade:setName("txt_grade")
txt_grade:setTag(1338)
txt_grade:setCascadeColorEnabled(true)
txt_grade:setCascadeOpacityEnabled(true)
txt_grade:setPosition(171.0000, 39.7100)
txt_grade:setTextColor({r = 148, g = 73, b = 26})
layout = ccui.LayoutComponent:bindLayoutComponent(txt_grade)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.1018)
layout:setPercentWidth(0.4912)
layout:setPercentHeight(0.0615)
layout:setSize({width = 168.0000, height = 24.0000})
layout:setLeftMargin(87.0000)
layout:setRightMargin(87.0000)
layout:setTopMargin(338.2900)
layout:setBottomMargin(27.7100)
panel_1:addChild(txt_grade)

--Create nd_star
local nd_star = ccui.Layout:create()
nd_star:ignoreContentAdaptWithSize(false)
nd_star:setClippingEnabled(false)
nd_star:setBackGroundColorOpacity(102)
nd_star:setLayoutComponentEnabled(true)
nd_star:setName("nd_star")
nd_star:setTag(76)
nd_star:setCascadeColorEnabled(true)
nd_star:setCascadeOpacityEnabled(true)
nd_star:setPosition(57.7600, 309.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(nd_star)
layout:setPositionPercentX(0.1689)
layout:setPositionPercentY(0.7923)
layout:setPercentWidth(0.5848)
layout:setPercentHeight(0.1282)
layout:setSize({width = 200.0000, height = 50.0000})
layout:setLeftMargin(57.7600)
layout:setRightMargin(84.2400)
layout:setTopMargin(31.0000)
layout:setBottomMargin(309.0000)
panel_1:addChild(nd_star)

--Create star_1
local star_1 = ccui.Slider:create()
star_1:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/honor.plist")
star_1:loadBarTexture("hall/honor/starbg.png",1)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/honor.plist")
star_1:loadProgressBarTexture("hall/honor/star.png",1)
star_1:setTouchEnabled(false);
star_1:setLayoutComponentEnabled(true)
star_1:setName("star_1")
star_1:setTag(81)
star_1:setCascadeColorEnabled(true)
star_1:setCascadeOpacityEnabled(true)
star_1:setPosition(-11.4600, 7.0800)
layout = ccui.LayoutComponent:bindLayoutComponent(star_1)
layout:setPositionPercentX(-0.0573)
layout:setPositionPercentY(0.1416)
layout:setPercentWidth(0.2550)
layout:setPercentHeight(0.9600)
layout:setSize({width = 51.0000, height = 48.0000})
layout:setLeftMargin(-36.9600)
layout:setRightMargin(185.9600)
layout:setTopMargin(18.9200)
layout:setBottomMargin(-16.9200)
nd_star:addChild(star_1)

--Create star_2
local star_2 = ccui.Slider:create()
star_2:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/honor.plist")
star_2:loadBarTexture("hall/honor/starbg.png",1)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/honor.plist")
star_2:loadProgressBarTexture("hall/honor/star.png",1)
star_2:setTouchEnabled(false);
star_2:setLayoutComponentEnabled(true)
star_2:setName("star_2")
star_2:setTag(80)
star_2:setCascadeColorEnabled(true)
star_2:setCascadeOpacityEnabled(true)
star_2:setPosition(45.2800, 39.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(star_2)
layout:setPositionPercentX(0.2264)
layout:setPositionPercentY(0.7800)
layout:setPercentWidth(0.2550)
layout:setPercentHeight(0.9600)
layout:setSize({width = 51.0000, height = 48.0000})
layout:setLeftMargin(19.7800)
layout:setRightMargin(129.2200)
layout:setTopMargin(-13.0000)
layout:setBottomMargin(15.0000)
nd_star:addChild(star_2)

--Create star_3
local star_3 = ccui.Slider:create()
star_3:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/honor.plist")
star_3:loadBarTexture("hall/honor/starbg.png",1)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/honor.plist")
star_3:loadProgressBarTexture("hall/honor/star.png",1)
star_3:setTouchEnabled(false);
star_3:setLayoutComponentEnabled(true)
star_3:setName("star_3")
star_3:setTag(79)
star_3:setCascadeColorEnabled(true)
star_3:setCascadeOpacityEnabled(true)
star_3:setPosition(115.2800, 56.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(star_3)
layout:setPositionPercentX(0.5764)
layout:setPositionPercentY(1.1200)
layout:setPercentWidth(0.2550)
layout:setPercentHeight(0.9600)
layout:setSize({width = 51.0000, height = 48.0000})
layout:setLeftMargin(89.7800)
layout:setRightMargin(59.2200)
layout:setTopMargin(-30.0000)
layout:setBottomMargin(32.0000)
nd_star:addChild(star_3)

--Create star_4
local star_4 = ccui.Slider:create()
star_4:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/honor.plist")
star_4:loadBarTexture("hall/honor/starbg.png",1)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/honor.plist")
star_4:loadProgressBarTexture("hall/honor/star.png",1)
star_4:setTouchEnabled(false);
star_4:setLayoutComponentEnabled(true)
star_4:setName("star_4")
star_4:setTag(78)
star_4:setCascadeColorEnabled(true)
star_4:setCascadeOpacityEnabled(true)
star_4:setPosition(188.2800, 36.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(star_4)
layout:setPositionPercentX(0.9414)
layout:setPositionPercentY(0.7200)
layout:setPercentWidth(0.2550)
layout:setPercentHeight(0.9600)
layout:setSize({width = 51.0000, height = 48.0000})
layout:setLeftMargin(162.7800)
layout:setRightMargin(-13.7800)
layout:setTopMargin(-10.0000)
layout:setBottomMargin(12.0000)
nd_star:addChild(star_4)

--Create star_5
local star_5 = ccui.Slider:create()
star_5:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/honor.plist")
star_5:loadBarTexture("hall/honor/starbg.png",1)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/honor.plist")
star_5:loadProgressBarTexture("hall/honor/star.png",1)
star_5:setTouchEnabled(false);
star_5:setLayoutComponentEnabled(true)
star_5:setName("star_5")
star_5:setTag(77)
star_5:setCascadeColorEnabled(true)
star_5:setCascadeOpacityEnabled(true)
star_5:setPosition(245.2800, 8.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(star_5)
layout:setPositionPercentX(1.2264)
layout:setPositionPercentY(0.1600)
layout:setPercentWidth(0.2550)
layout:setPercentHeight(0.9600)
layout:setSize({width = 51.0000, height = 48.0000})
layout:setLeftMargin(219.7800)
layout:setRightMargin(-70.7800)
layout:setTopMargin(18.0000)
layout:setBottomMargin(-16.0000)
nd_star:addChild(star_5)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

