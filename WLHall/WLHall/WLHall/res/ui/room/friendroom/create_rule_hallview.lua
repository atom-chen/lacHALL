--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create img_bg
local img_bg = ccui.Layout:create()
img_bg:ignoreContentAdaptWithSize(false)
img_bg:setClippingEnabled(false)
img_bg:setBackGroundColorOpacity(102)
img_bg:setTouchEnabled(true);
img_bg:setLayoutComponentEnabled(true)
img_bg:setName("img_bg")
img_bg:setTag(254)
img_bg:setCascadeColorEnabled(true)
img_bg:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(img_bg)
layout:setSize({width = 1096.0000, height = 634.0000})
layout:setRightMargin(-1096.0000)
layout:setTopMargin(-634.0000)
Node:addChild(img_bg)

--Create img_ditu
local img_ditu = ccui.ImageView:create()
img_ditu:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/common.plist")
img_ditu:loadTexture("hall/common/new_pop_bg_4.png",1)
img_ditu:setScale9Enabled(true)
img_ditu:setCapInsets({x = 8, y = 8, width = 7, height = 10})
img_ditu:setLayoutComponentEnabled(true)
img_ditu:setName("img_ditu")
img_ditu:setTag(42)
img_ditu:setCascadeColorEnabled(true)
img_ditu:setCascadeOpacityEnabled(true)
img_ditu:setAnchorPoint(0.0000, 0.5000)
img_ditu:setPosition(275.0000, 317.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(img_ditu)
layout:setPositionPercentX(0.2509)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(0.7536)
layout:setPercentHeight(1.0174)
layout:setSize({width = 826.0000, height = 645.0000})
layout:setLeftMargin(275.0000)
layout:setRightMargin(-5.0000)
layout:setTopMargin(-5.5000)
layout:setBottomMargin(-5.5000)
img_bg:addChild(img_ditu)

--Create lv_bg
local lv_bg = ccui.ImageView:create()
lv_bg:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/common.plist")
lv_bg:loadTexture("hall/common/new_pop_right_bg.png",1)
lv_bg:setScale9Enabled(true)
lv_bg:setCapInsets({x = 4, y = 8, width = 3, height = 4})
lv_bg:setLayoutComponentEnabled(true)
lv_bg:setName("lv_bg")
lv_bg:setTag(499)
lv_bg:setCascadeColorEnabled(true)
lv_bg:setCascadeOpacityEnabled(true)
lv_bg:setAnchorPoint(0.0000, 0.5000)
lv_bg:setPosition(-0.5000, 317.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(lv_bg)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(-0.0005)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(0.2550)
layout:setPercentHeight(1.0174)
layout:setSize({width = 279.5000, height = 645.0000})
layout:setLeftMargin(-0.5000)
layout:setRightMargin(817.0000)
layout:setTopMargin(-5.5000)
layout:setBottomMargin(-5.5000)
img_bg:addChild(lv_bg)

--Create lv_tab
local lv_tab = ccui.ListView:create()
lv_tab:setDirection(1)
lv_tab:setGravity(0)
lv_tab:ignoreContentAdaptWithSize(false)
lv_tab:setClippingEnabled(true)
lv_tab:setBackGroundImageCapInsets({x = -3, y = -3, width = 6, height = 6})
lv_tab:setBackGroundImageScale9Enabled(true)
lv_tab:setLayoutComponentEnabled(true)
lv_tab:setName("lv_tab")
lv_tab:setTag(336)
lv_tab:setCascadeColorEnabled(true)
lv_tab:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(lv_tab)
layout:setPercentHeightEnabled(true)
layout:setPercentWidth(0.2500)
layout:setPercentHeight(1.0000)
layout:setSize({width = 274.0000, height = 634.0000})
layout:setRightMargin(822.0000)
img_bg:addChild(lv_tab)

--Create nd_subview
local nd_subview=cc.Node:create()
nd_subview:setName("nd_subview")
nd_subview:setTag(201)
nd_subview:setCascadeColorEnabled(true)
nd_subview:setCascadeOpacityEnabled(true)
nd_subview:setPosition(280.0000, 0.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(nd_subview)
layout:setPositionPercentX(0.2555)
layout:setLeftMargin(280.0000)
layout:setRightMargin(816.0000)
layout:setTopMargin(634.0000)
img_bg:addChild(nd_subview)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

