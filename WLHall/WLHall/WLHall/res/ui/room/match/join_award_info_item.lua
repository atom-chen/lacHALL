--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create panel_bg
local panel_bg = ccui.Layout:create()
panel_bg:ignoreContentAdaptWithSize(false)
panel_bg:setClippingEnabled(false)
panel_bg:setTouchEnabled(true);
panel_bg:setLayoutComponentEnabled(true)
panel_bg:setName("panel_bg")
panel_bg:setTag(379)
panel_bg:setCascadeColorEnabled(true)
panel_bg:setCascadeOpacityEnabled(true)
panel_bg:setAnchorPoint(0.5000, 0.5000)
layout = ccui.LayoutComponent:bindLayoutComponent(panel_bg)
layout:setSize({width = 472.0000, height = 76.0000})
layout:setLeftMargin(-236.0000)
layout:setRightMargin(-236.0000)
layout:setTopMargin(-38.0000)
layout:setBottomMargin(-38.0000)
Node:addChild(panel_bg)

--Create img_bg
local img_bg = ccui.ImageView:create()
img_bg:ignoreContentAdaptWithSize(false)
img_bg:loadTexture("hall/room/match/img_kuan2.png",0)
img_bg:setScale9Enabled(true)
img_bg:setCapInsets({x = 9, y = 9, width = 12, height = 12})
img_bg:setLayoutComponentEnabled(true)
img_bg:setName("img_bg")
img_bg:setTag(53)
img_bg:setCascadeColorEnabled(true)
img_bg:setCascadeOpacityEnabled(true)
img_bg:setPosition(236.0000, 38.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(img_bg)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(0.9767)
layout:setPercentHeight(0.9211)
layout:setSize({width = 461.0000, height = 70.0000})
layout:setLeftMargin(5.5000)
layout:setRightMargin(5.5000)
layout:setTopMargin(3.0000)
layout:setBottomMargin(3.0000)
panel_bg:addChild(img_bg)

--Create img_jb
local img_jb = ccui.ImageView:create()
img_jb:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/honor.plist")
img_jb:loadTexture("hall/honor/rank_1.png",1)
img_jb:setLayoutComponentEnabled(true)
img_jb:setName("img_jb")
img_jb:setTag(218)
img_jb:setCascadeColorEnabled(true)
img_jb:setCascadeOpacityEnabled(true)
img_jb:setVisible(false)
img_jb:setPosition(57.0000, 38.0000)
img_jb:setScaleX(1.1500)
img_jb:setScaleY(1.1500)
layout = ccui.LayoutComponent:bindLayoutComponent(img_jb)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.1208)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(0.1208)
layout:setPercentHeight(0.5658)
layout:setSize({width = 57.0000, height = 43.0000})
layout:setLeftMargin(28.5000)
layout:setRightMargin(386.5000)
layout:setTopMargin(16.5000)
layout:setBottomMargin(16.5000)
panel_bg:addChild(img_jb)

--Create txt_mc
local txt_mc = ccui.Text:create()
txt_mc:ignoreContentAdaptWithSize(true)
txt_mc:setTextAreaSize({width = 0, height = 0})
txt_mc:setFontName("")
txt_mc:setFontSize(28)
txt_mc:setString([[51-300名:]])
txt_mc:setLayoutComponentEnabled(true)
txt_mc:setName("txt_mc")
txt_mc:setTag(314)
txt_mc:setCascadeColorEnabled(true)
txt_mc:setCascadeOpacityEnabled(true)
txt_mc:setAnchorPoint(0.0000, 0.5000)
txt_mc:setPosition(30.0000, 38.0000)
txt_mc:setTextColor({r = 113, g = 59, b = 22})
layout = ccui.LayoutComponent:bindLayoutComponent(txt_mc)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.0636)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(0.2669)
layout:setPercentHeight(0.3684)
layout:setSize({width = 126.0000, height = 28.0000})
layout:setLeftMargin(30.0000)
layout:setRightMargin(316.0000)
layout:setTopMargin(24.0000)
layout:setBottomMargin(24.0000)
panel_bg:addChild(txt_mc)

--Create txt_count
local txt_count = ccui.Text:create()
txt_count:ignoreContentAdaptWithSize(true)
txt_count:setTextAreaSize({width = 0, height = 0})
txt_count:setFontName("")
txt_count:setFontSize(28)
txt_count:setString([[x3元]])
txt_count:setTextHorizontalAlignment(2)
txt_count:setTextVerticalAlignment(1)
txt_count:setLayoutComponentEnabled(true)
txt_count:setName("txt_count")
txt_count:setTag(316)
txt_count:setCascadeColorEnabled(true)
txt_count:setCascadeOpacityEnabled(true)
txt_count:setAnchorPoint(1.0000, 0.5000)
txt_count:setPosition(450.0000, 38.0000)
txt_count:setTextColor({r = 234, g = 88, b = 0})
layout = ccui.LayoutComponent:bindLayoutComponent(txt_count)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.9534)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(0.1186)
layout:setPercentHeight(0.3684)
layout:setSize({width = 56.0000, height = 28.0000})
layout:setLeftMargin(394.0000)
layout:setRightMargin(22.0000)
layout:setTopMargin(24.0000)
layout:setBottomMargin(24.0000)
panel_bg:addChild(txt_count)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

