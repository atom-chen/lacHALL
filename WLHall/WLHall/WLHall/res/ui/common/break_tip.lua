--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create bg_root
local bg_root = ccui.ImageView:create()
bg_root:ignoreContentAdaptWithSize(false)
bg_root:loadTexture("common/loading_info_bg.png",0)
bg_root:setScale9Enabled(true)
bg_root:setCapInsets({x = 94, y = 29, width = 1, height = 32})
bg_root:setLayoutComponentEnabled(true)
bg_root:setName("bg_root")
bg_root:setTag(4)
bg_root:setCascadeColorEnabled(true)
bg_root:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(bg_root)
layout:setSize({width = 600.0000, height = 90.0000})
layout:setLeftMargin(-300.0000)
layout:setRightMargin(-300.0000)
layout:setTopMargin(-45.0000)
layout:setBottomMargin(-45.0000)
Node:addChild(bg_root)

--Create loading
local loading=cc.Node:create()
loading:setName("loading")
loading:setTag(30)
loading:setCascadeColorEnabled(true)
loading:setCascadeOpacityEnabled(true)
loading:setPosition(160.0000, 46.0000)
loading:setScaleX(0.7000)
loading:setScaleY(0.7000)
layout = ccui.LayoutComponent:bindLayoutComponent(loading)
layout:setPositionPercentX(0.2667)
layout:setPositionPercentY(0.5111)
layout:setLeftMargin(160.0000)
layout:setRightMargin(440.0000)
layout:setTopMargin(44.0000)
layout:setBottomMargin(46.0000)
bg_root:addChild(loading)

--Create img_dialog
local img_dialog = ccui.ImageView:create()
img_dialog:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/common.plist")
img_dialog:loadTexture("hall/common/loading_halo.png",1)
img_dialog:setLayoutComponentEnabled(true)
img_dialog:setName("img_dialog")
img_dialog:setTag(28)
img_dialog:setCascadeColorEnabled(true)
img_dialog:setCascadeOpacityEnabled(true)
img_dialog:setRotationSkewX(360.0000)
img_dialog:setRotationSkewY(360.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(img_dialog)
layout:setSize({width = 90.0000, height = 90.0000})
layout:setLeftMargin(-45.0000)
layout:setRightMargin(-45.0000)
layout:setTopMargin(-45.0000)
layout:setBottomMargin(-45.0000)
loading:addChild(img_dialog)

--Create img_
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/common.plist")
local img_ = cc.Sprite:createWithSpriteFrameName("hall/common/loading_peach.png")
img_:setName("img_")
img_:setTag(29)
img_:setCascadeColorEnabled(true)
img_:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(img_)
layout:setSize({width = 46.0000, height = 46.0000})
layout:setLeftMargin(-23.0000)
layout:setRightMargin(-23.0000)
layout:setTopMargin(-23.0000)
layout:setBottomMargin(-23.0000)
img_:setBlendFunc({src = 1, dst = 771})
loading:addChild(img_)

--Create txt_tips
local txt_tips = ccui.Text:create()
txt_tips:ignoreContentAdaptWithSize(true)
txt_tips:setTextAreaSize({width = 0, height = 0})
txt_tips:setFontName("")
txt_tips:setFontSize(28)
txt_tips:setString([[正在尝试重连 ...]])
txt_tips:setLayoutComponentEnabled(true)
txt_tips:setName("txt_tips")
txt_tips:setTag(8)
txt_tips:setCascadeColorEnabled(true)
txt_tips:setCascadeOpacityEnabled(true)
txt_tips:setAnchorPoint(0.0000, 0.5000)
txt_tips:setPosition(210.6262, 44.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(txt_tips)
layout:setPositionPercentX(0.3510)
layout:setPositionPercentY(0.4889)
layout:setPercentWidth(0.3733)
layout:setPercentHeight(0.3111)
layout:setSize({width = 224.0000, height = 28.0000})
layout:setLeftMargin(210.6262)
layout:setRightMargin(165.3738)
layout:setTopMargin(32.0000)
layout:setBottomMargin(30.0000)
bg_root:addChild(txt_tips)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(90)
result['animation']:setTimeSpeed(1.0000)

--Create PositionTimeline
local PositionTimeline = ccs.Timeline:create()

localFrame = ccs.PositionFrame:create()
localFrame:setFrameIndex(0)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setX(0.0000)
localFrame:setY(0.0000)
PositionTimeline:addFrame(localFrame)

localFrame = ccs.PositionFrame:create()
localFrame:setFrameIndex(90)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setX(0.0000)
localFrame:setY(0.0000)
PositionTimeline:addFrame(localFrame)

result['animation']:addTimeline(PositionTimeline)
PositionTimeline:setNode(img_dialog)

--Create ScaleTimeline
local ScaleTimeline = ccs.Timeline:create()

localFrame = ccs.ScaleFrame:create()
localFrame:setFrameIndex(0)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setScaleX(1.0000)
localFrame:setScaleY(1.0000)
ScaleTimeline:addFrame(localFrame)

localFrame = ccs.ScaleFrame:create()
localFrame:setFrameIndex(90)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setScaleX(1.0000)
localFrame:setScaleY(1.0000)
ScaleTimeline:addFrame(localFrame)

result['animation']:addTimeline(ScaleTimeline)
ScaleTimeline:setNode(img_dialog)

--Create RotationSkewTimeline
local RotationSkewTimeline = ccs.Timeline:create()

localFrame = ccs.RotationSkewFrame:create()
localFrame:setFrameIndex(0)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setSkewX(0.0000)
localFrame:setSkewY(0.0000)
RotationSkewTimeline:addFrame(localFrame)

localFrame = ccs.RotationSkewFrame:create()
localFrame:setFrameIndex(90)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setSkewX(360.0000)
localFrame:setSkewY(360.0000)
RotationSkewTimeline:addFrame(localFrame)

result['animation']:addTimeline(RotationSkewTimeline)
RotationSkewTimeline:setNode(img_dialog)

--Create PositionTimeline
local PositionTimeline = ccs.Timeline:create()

localFrame = ccs.PositionFrame:create()
localFrame:setFrameIndex(0)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setX(0.0000)
localFrame:setY(0.0000)
PositionTimeline:addFrame(localFrame)

localFrame = ccs.PositionFrame:create()
localFrame:setFrameIndex(22)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setX(0.0000)
localFrame:setY(0.0000)
PositionTimeline:addFrame(localFrame)

localFrame = ccs.PositionFrame:create()
localFrame:setFrameIndex(45)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setX(0.0000)
localFrame:setY(0.0000)
PositionTimeline:addFrame(localFrame)

localFrame = ccs.PositionFrame:create()
localFrame:setFrameIndex(67)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setX(0.0000)
localFrame:setY(0.0000)
PositionTimeline:addFrame(localFrame)

localFrame = ccs.PositionFrame:create()
localFrame:setFrameIndex(90)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setX(0.0000)
localFrame:setY(0.0000)
PositionTimeline:addFrame(localFrame)

result['animation']:addTimeline(PositionTimeline)
PositionTimeline:setNode(img_)

--Create ScaleTimeline
local ScaleTimeline = ccs.Timeline:create()

localFrame = ccs.ScaleFrame:create()
localFrame:setFrameIndex(0)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setScaleX(1.0000)
localFrame:setScaleY(1.0000)
ScaleTimeline:addFrame(localFrame)

localFrame = ccs.ScaleFrame:create()
localFrame:setFrameIndex(22)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setScaleX(0.0100)
localFrame:setScaleY(1.0000)
ScaleTimeline:addFrame(localFrame)

localFrame = ccs.ScaleFrame:create()
localFrame:setFrameIndex(45)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setScaleX(1.0000)
localFrame:setScaleY(1.0000)
ScaleTimeline:addFrame(localFrame)

localFrame = ccs.ScaleFrame:create()
localFrame:setFrameIndex(67)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setScaleX(0.0100)
localFrame:setScaleY(1.0000)
ScaleTimeline:addFrame(localFrame)

localFrame = ccs.ScaleFrame:create()
localFrame:setFrameIndex(90)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setScaleX(1.0000)
localFrame:setScaleY(1.0000)
ScaleTimeline:addFrame(localFrame)

result['animation']:addTimeline(ScaleTimeline)
ScaleTimeline:setNode(img_)

--Create RotationSkewTimeline
local RotationSkewTimeline = ccs.Timeline:create()

localFrame = ccs.RotationSkewFrame:create()
localFrame:setFrameIndex(0)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setSkewX(0.0000)
localFrame:setSkewY(0.0000)
RotationSkewTimeline:addFrame(localFrame)

localFrame = ccs.RotationSkewFrame:create()
localFrame:setFrameIndex(22)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setSkewX(0.0000)
localFrame:setSkewY(0.0000)
RotationSkewTimeline:addFrame(localFrame)

localFrame = ccs.RotationSkewFrame:create()
localFrame:setFrameIndex(45)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setSkewX(0.0000)
localFrame:setSkewY(0.0000)
RotationSkewTimeline:addFrame(localFrame)

localFrame = ccs.RotationSkewFrame:create()
localFrame:setFrameIndex(67)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setSkewX(0.0000)
localFrame:setSkewY(0.0000)
RotationSkewTimeline:addFrame(localFrame)

localFrame = ccs.RotationSkewFrame:create()
localFrame:setFrameIndex(90)
localFrame:setTween(true)
localFrame:setTweenType(0)
localFrame:setSkewX(0.0000)
localFrame:setSkewY(0.0000)
RotationSkewTimeline:addFrame(localFrame)

result['animation']:addTimeline(RotationSkewTimeline)
RotationSkewTimeline:setNode(img_)
--Create Animation List

result['root'] = Node
return result;
end

return Result

