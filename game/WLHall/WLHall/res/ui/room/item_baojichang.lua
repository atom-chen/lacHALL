--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create img_bk
local img_bk = ccui.ImageView:create()
img_bk:ignoreContentAdaptWithSize(false)
img_bk:loadTexture("weile/ico_room.png",0)
img_bk:setTouchEnabled(true);
img_bk:setLayoutComponentEnabled(true)
img_bk:setName("img_bk")
img_bk:setTag(30)
img_bk:setCascadeColorEnabled(true)
img_bk:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(img_bk)
layout:setSize({width = 257.0000, height = 201.0000})
layout:setLeftMargin(-128.5000)
layout:setRightMargin(-128.5000)
layout:setTopMargin(-100.5000)
layout:setBottomMargin(-100.5000)
Node:addChild(img_bk)

--Create txt_min
local txt_min = ccui.Text:create()
txt_min:ignoreContentAdaptWithSize(true)
txt_min:setTextAreaSize({width = 0, height = 0})
txt_min:setFontName("")
txt_min:setFontSize(28)
txt_min:setString([[2万准入]])
txt_min:setLayoutComponentEnabled(true)
txt_min:setName("txt_min")
txt_min:setTag(72)
txt_min:setCascadeColorEnabled(true)
txt_min:setCascadeOpacityEnabled(true)
txt_min:setAnchorPoint(1.0000, 0.0000)
txt_min:setPosition(251.9997, 9.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(txt_min)
layout:setPositionPercentX(0.9805)
layout:setPositionPercentY(0.0448)
layout:setPercentWidth(0.3891)
layout:setPercentHeight(0.1592)
layout:setSize({width = 100.0000, height = 32.0000})
layout:setLeftMargin(151.9997)
layout:setRightMargin(5.0003)
layout:setTopMargin(160.0000)
layout:setBottomMargin(9.0000)
img_bk:addChild(txt_min)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

