--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create panel_bg
local panel_bg = ccui.Layout:create()
panel_bg:ignoreContentAdaptWithSize(false)
panel_bg:setClippingEnabled(false)
panel_bg:setBackGroundColorOpacity(102)
panel_bg:setTouchEnabled(true);
panel_bg:setLayoutComponentEnabled(true)
panel_bg:setName("panel_bg")
panel_bg:setTag(508)
panel_bg:setCascadeColorEnabled(true)
panel_bg:setCascadeOpacityEnabled(true)
layout = ccui.LayoutComponent:bindLayoutComponent(panel_bg)
layout:setSize({width = 836.0000, height = 634.0000})
layout:setRightMargin(-836.0000)
layout:setTopMargin(-634.0000)
Node:addChild(panel_bg)

--Create img_download
local img_download = ccui.ImageView:create()
img_download:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/common.plist")
img_download:loadTexture("hall/common/pic_Loading.png",1)
img_download:setFlippedX(true)
img_download:setLayoutComponentEnabled(true)
img_download:setName("img_download")
img_download:setTag(27)
img_download:setCascadeColorEnabled(true)
img_download:setCascadeOpacityEnabled(true)
img_download:setVisible(false)
img_download:setPosition(418.0000, 390.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(img_download)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.6151)
layout:setPercentWidth(0.1292)
layout:setPercentHeight(0.1703)
layout:setSize({width = 108.0000, height = 108.0000})
layout:setLeftMargin(364.0000)
layout:setRightMargin(364.0000)
layout:setTopMargin(190.0000)
layout:setBottomMargin(336.0000)
panel_bg:addChild(img_download)

--Create txt_tips
local txt_tips = ccui.Text:create()
txt_tips:ignoreContentAdaptWithSize(true)
txt_tips:setTextAreaSize({width = 0, height = 0})
txt_tips:setFontName("")
txt_tips:setFontSize(30)
txt_tips:setString([[正在研发中，敬请期待！]])
txt_tips:setLayoutComponentEnabled(true)
txt_tips:setName("txt_tips")
txt_tips:setTag(52)
txt_tips:setCascadeColorEnabled(true)
txt_tips:setCascadeOpacityEnabled(true)
txt_tips:setVisible(false)
txt_tips:setPosition(418.0000, 315.0000)
txt_tips:setTextColor({r = 143, g = 78, b = 12})
layout = ccui.LayoutComponent:bindLayoutComponent(txt_tips)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.4968)
layout:setPercentWidth(0.3947)
layout:setPercentHeight(0.0473)
layout:setSize({width = 330.0000, height = 30.0000})
layout:setLeftMargin(253.0000)
layout:setRightMargin(253.0000)
layout:setTopMargin(304.0000)
layout:setBottomMargin(300.0000)
panel_bg:addChild(txt_tips)

--Create img_line
local img_line = ccui.ImageView:create()
img_line:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/jx_room.plist")
img_line:loadTexture("hall/room/jxroom/create_line.png",1)
img_line:setScale9Enabled(true)
img_line:setCapInsets({x = 1, y = 0, width = 8, height = 1})
img_line:setLayoutComponentEnabled(true)
img_line:setName("img_line")
img_line:setTag(434)
img_line:setCascadeColorEnabled(true)
img_line:setCascadeOpacityEnabled(true)
img_line:setAnchorPoint(0.0000, 0.5000)
img_line:setPosition(0.0000, 99.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(img_line)
layout:setSize({width = 836.0000, height = 1.0000})
layout:setRightMargin(-836.0000)
layout:setTopMargin(-99.5000)
layout:setBottomMargin(98.5000)
Node:addChild(img_line)

--Create btn_update
local btn_update = ccui.Button:create()
btn_update:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/jx_room.plist")
btn_update:loadTextureNormal("hall/room/jxroom/create_btn_gx.png",1)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/jx_room.plist")
btn_update:loadTexturePressed("hall/room/jxroom/create_btn_gx.png",1)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/jx_room.plist")
btn_update:loadTextureDisabled("hall/room/jxroom/create_btn_gx.png",1)
btn_update:setTitleFontSize(14)
btn_update:setTitleColor({r = 65, g = 65, b = 70})
btn_update:setScale9Enabled(true)
btn_update:setCapInsets({x = 8, y = 8, width = 162, height = 43})
btn_update:setLayoutComponentEnabled(true)
btn_update:setName("btn_update")
btn_update:setTag(53)
btn_update:setCascadeColorEnabled(true)
btn_update:setCascadeOpacityEnabled(true)
btn_update:setVisible(false)
btn_update:setPosition(722.0000, 49.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(btn_update)
layout:setSize({width = 178.0000, height = 59.0000})
layout:setLeftMargin(633.0000)
layout:setRightMargin(-811.0000)
layout:setTopMargin(-78.5000)
layout:setBottomMargin(19.5000)
Node:addChild(btn_update)

--Create btn_create
local btn_create = ccui.Button:create()
btn_create:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/jx_room.plist")
btn_create:loadTextureNormal("hall/room/jxroom/create_btn_cjfj.png",1)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/jx_room.plist")
btn_create:loadTexturePressed("hall/room/jxroom/create_btn_cjfj.png",1)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/jx_room.plist")
btn_create:loadTextureDisabled("hall/room/jxroom/create_btn_cjfj.png",1)
btn_create:setTitleFontSize(14)
btn_create:setTitleColor({r = 65, g = 65, b = 70})
btn_create:setScale9Enabled(true)
btn_create:setCapInsets({x = 8, y = 8, width = 162, height = 43})
btn_create:setLayoutComponentEnabled(true)
btn_create:setName("btn_create")
btn_create:setTag(358)
btn_create:setCascadeColorEnabled(true)
btn_create:setCascadeOpacityEnabled(true)
btn_create:setPosition(722.0000, 49.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(btn_create)
layout:setSize({width = 178.0000, height = 59.0000})
layout:setLeftMargin(633.0000)
layout:setRightMargin(-811.0000)
layout:setTopMargin(-78.5000)
layout:setBottomMargin(19.5000)
Node:addChild(btn_create)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

