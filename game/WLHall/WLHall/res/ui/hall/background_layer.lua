--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Layer
local Layer=cc.Node:create()
Layer:setName("Layer")
layout = ccui.LayoutComponent:bindLayoutComponent(Layer)
layout:setSize({width = 1280.0000, height = 720.0000})

--Create pic_sky
local pic_sky = cc.Sprite:create("hall/newhall/img_hall_bg.jpg")
pic_sky:setName("pic_sky")
pic_sky:setTag(52)
pic_sky:setCascadeColorEnabled(true)
pic_sky:setCascadeOpacityEnabled(true)
pic_sky:setPosition(640.0000, 360.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(pic_sky)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(1.2188)
layout:setPercentHeight(1.0000)
layout:setSize({width = 1560.0000, height = 720.0000})
layout:setLeftMargin(-140.0000)
layout:setRightMargin(-140.0000)
pic_sky:setBlendFunc({src = 770, dst = 771})
Layer:addChild(pic_sky)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(0.5000)
--Create Animation List
local cloud = {name="cloud", startIndex=0, endIndex=300}
result['animation']:addAnimationInfo(cloud)

result['root'] = Layer
return result;
end

return Result

